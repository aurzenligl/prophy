name: test

on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        name:
          - ubuntu-py38-lintcov
          - ubuntu-py27
          - ubuntu-py35
          - ubuntu-py36
          - ubuntu-py37
          - ubuntu-py38
          - ubuntu-py39
          - ubuntu-py310
          - ubuntu-pypy2
          - ubuntu-pypy3
          - ubuntu-py27-noclang
          - ubuntu-py310-noclang
          - ubuntu-py38-gcc
          - ubuntu-py38-clang

        include:
          - name: ubuntu-py38-lintcov
            python: "3.8"
            tox_env: check,coverage
            coverage: true
          - name: ubuntu-py27
            python: "2.7"
            tox_env: py27
          - name: ubuntu-py35
            python: "3.5"
            tox_env: py35
          - name: ubuntu-py36
            python: "3.6"
            tox_env: py36
          - name: ubuntu-py37
            python: "3.7"
            tox_env: py37
          - name: ubuntu-py38
            python: "3.8"
            tox_env: py38
          - name: ubuntu-py39
            python: "3.9"
            tox_env: py39
          - name: ubuntu-py310
            python: "3.10"
            tox_env: py310
          - name: ubuntu-pypy2
            python: "pypy-2.7"
            tox_env: pypy
          - name: ubuntu-pypy3
            python: "pypy-3.7"
            tox_env: pypy3
          - name: ubuntu-py27-noclang
            python: "2.7"
            tox_env: noclang
          - name: ubuntu-py310-noclang
            python: "3.10"
            tox_env: noclang
          - name: ubuntu-py38-gcc
            python: "3.8"
            cxx: g++
          - name: ubuntu-py38-clang
            python: "3.8"
            cxx: clang++

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}

    - name: Set up C++
      run: sudo apt-get install -y g++ clang libgtest-dev valgrind

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox

    - name: Test with tox
      if: "matrix.tox_env"
      run: "tox -e ${{ matrix.tox_env }}"

    - name: Test with gtest
      if: "matrix.cxx"
      run: |
        ${{ matrix.cxx }} --version
        pip install .
        mkdir -p /tmp/gtest && cd /tmp/gtest && cmake /usr/src/gtest && make && export LIBRARY_PATH=${LIBRARY_PATH}:/tmp/gtest && cd -
        cd prophy_cpp && CXX=${{ matrix.cxx }} ./waf configure test dist -j1

    - name: Coveralls
      if: "matrix.coverage"
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ./coverage.lcov
